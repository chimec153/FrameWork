#pragma once
#include "Item.h"
class Crop :
	public Item
{
private:
	friend class Obj;
	friend class Scene;

protected:
	Crop();
	Crop(const Crop& crop);
	virtual ~Crop();

protected:
	CROP_TYPE		m_eCropType;
	int				m_iDay;
	int				m_iStage;
	bool			m_bTimeStart;	//	작물이 성장을 시작했는지 나타낸다.
	bool			m_bHarvested;

public:
	void SetCropType(CROP_TYPE eType)
	{
		m_eCropType = eType;
	}

	CROP_TYPE GetCropType()	const
	{
		return m_eCropType;
	}

	void TimeStart()
	{
		m_bTimeStart = true;
		Grow();
	}

	bool IsStart()	const
	{
		return m_bTimeStart;
	}

	void AddDay(int iDay);
	void Grow();

	int GetStage()	const
	{
		return m_iStage;
	}

	void Harvest()
	{
		m_bHarvested = true;
	}

	bool IsHarvested()	const
	{
		return m_bHarvested;
	}

public:
	virtual bool Init();
	virtual int Update(float fDeltaTime);
	virtual int LateUpdate(float fDeltaTime);
	virtual void Collision(float fDeltaTime);
	virtual void Render(HDC hDC, float fDeltaTime);
	virtual Crop* Clone();

public:
	void MouseOn(class Collider* pSrc, class Collider* pDest, float fTime);
	void MousePress(class Collider* pSrc, class Collider* pDest, float fTime);
	void MouseOff(class Collider* pSrc, class Collider* pDest, float fTime);
};

