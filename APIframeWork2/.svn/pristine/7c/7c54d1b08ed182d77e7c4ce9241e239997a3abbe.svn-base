#pragma once
#include "UI.h"
class UIClockHand :
	public UI
{
private:
	friend class Obj;
	friend class Scene;

private:
	UIClockHand();
	UIClockHand(const UIClockHand& clockhand);
	~UIClockHand();

private:
	float				m_fTime;
	POSITION			m_tOriginPos;
	class Obj*			m_pNightPanel;
	list<class Obj*>	m_CropList;

public:
	void AddTime(float fTime);

	void SetNightPanel(class Obj* pObj);

	void AddCrop(class Obj* pObj)
	{
		if (pObj)
		{
			pObj->AddRef();
			m_CropList.push_back(pObj);
		}
	}

	void DeleteCrop(class Obj* pObj)
	{
		auto iter = m_CropList.begin();
		auto iterEnd = m_CropList.end();

		for (; iter != iterEnd; ++iter)
		{
			if ((*iter) == pObj)
			{
				SAFE_RELEASE(pObj);
				m_CropList.erase(iter);
			}
		}
	}

public:
	virtual bool Init();
	virtual void Input(float fDeltaTime);
	virtual int Update(float fDeltaTime);
	virtual int LateUpdate(float fDeltaTime);
	virtual void Collision(float fDeltaTime);
	virtual void Render(HDC hDC, float fDeltaTime);
	virtual UIClockHand* Clone();
};

