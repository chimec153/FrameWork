#pragma once
#include "UI.h"
class Text :
	public UI
{
	friend class Obj;
	friend class Scene;

private:
	Text();
	Text(const Text& text);
	virtual ~Text();

private:
	TCHAR*					m_pText;
	int						m_iLength;
	HFONT					m_hFont;
	COLORREF				m_tColor;
	bool					m_bBackColor;
	bool					m_bUI;
	vector<POSITION>		m_vecImageOffset;
	vector<POSITION>		m_vecSize;

public:
	void SetText(const TCHAR* pText);
	void SetColor(unsigned char r, unsigned char g, unsigned char b)
	{
		m_tColor = RGB(r, g, b);
	}
	void SetBKColor(bool bBack)
	{
		m_bBackColor = bBack;
	}
	void SetFont(const string& strName);

	const TCHAR* GetText()	const
	{
		return m_pText;
	}

public:
	virtual bool Init();
	virtual void Input(float fDeltaTime);
	virtual int Update(float fDeltaTime);
	virtual int LateUpdate(float fDeltaTime);
	virtual void Collision(float fDeltaTime);
	virtual void Render(HDC hDC, float fDeltaTime);
	virtual Text* Clone();
};

