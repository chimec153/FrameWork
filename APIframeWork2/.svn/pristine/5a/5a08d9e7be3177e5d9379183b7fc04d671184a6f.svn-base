#include "FightObj.h"
#include "../Scene/Scene.h"
#include "UINum.h"
#include "UIBar.h"

FightObj::FightObj()	:
	m_iHP(0),
	m_iEnergy(0),
	m_iAttack(5),
	m_fHitSpeed(180.f),
	m_fHitTime(0.f),
	m_bHitted(false)
{
}

FightObj::FightObj(const FightObj& fighter)	:
	MoveObj(fighter)
{
	m_iHP = fighter.m_iHP;
	m_iEnergy = fighter.m_iEnergy;
	m_iAttack = fighter.m_iAttack;
	m_fHitTime = 0.f;
	m_fHitSpeed = fighter.m_fHitSpeed;
	m_bHitted = false;
}

FightObj::~FightObj()
{
}

bool FightObj::Init()
{
	return true;
}

void FightObj::Input(float fDeltaTime)
{
	MoveObj::Input(fDeltaTime);
}

int FightObj::Update(float fDeltaTime)
{
	MoveObj::Update(fDeltaTime);

	if (m_fHitTime > 0.f)
	{
		m_fHitTime -= fDeltaTime;

		SetAngle(m_tHitAngle);

		MoveAngle(m_fHitSpeed, fDeltaTime);
	}
	else if(m_bHitted)
		m_bHitted = false;

	return 0;
}

int FightObj::LateUpdate(float fDeltaTime)
{
	MoveObj::LateUpdate(fDeltaTime);
	return 0;
}

void FightObj::Collision(float fDeltaTime)
{
	MoveObj::Collision(fDeltaTime);
}

void FightObj::Render(HDC hDC, float fDeltaTime)
{
	MoveObj::Render(hDC, fDeltaTime);
}

void FightObj::Hitted(int iAttack, POSITION tPos)
{
	m_iHP -= iAttack;

	SetHitAngle(tPos);
	SetHitTime(0.5f);

	Layer* pLayer = m_pScene->FindLayer("UI");

	Obj* pNum = CreateCloneObj("Num", "Num", SC_CURRENT, pLayer);

	((UINum*)pNum)->CreateNum(5);
	pNum->SetPos(m_tPos.x, m_tPos.y - m_tSize.y * m_tPivot.y);

	SAFE_RELEASE(pNum);
}
